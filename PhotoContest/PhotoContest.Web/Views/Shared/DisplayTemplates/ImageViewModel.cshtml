@model PhotoContest.Web.ViewModels.ImageViewModel
@using Microsoft.AspNet.Identity

<div id="image-@Model.Id" class="col-sm-6 col-md-4">
    <div class="thumbnail" id="image-thumbnail">
        <a href="@Url.Action("Details", "Image", new { id=@Model.Id })"><img src="@Model.PictureUrl" class="thumbnail" style="300px; height=200px;" /></a>

        <div class="caption">
            <span>@Html.LabelFor(m => m.User) :</span>
            @if (@Model.User == this.User.Identity.Name)
            {
                <span>
                    @Html.ActionLink(@Model.User, "Index", "Profile"
            , null
            , null)
                </span>
            }
            else
            {
                <span>
                    @Html.ActionLink(@Model.User, "Details", "Profile"
            , new
            {
                userName = @Model.User
            }, null)
                </span>
            }
        </div>
        <div>
            <span>@Html.LabelFor(m => m.Rating) :</span>
            <span id="image-rating">@Html.DisplayFor(m => m.Rating)</span>
        </div>
        @if (this.User.IsInRole("Admin"))
        {
            @Html.ActionLink("Erase picture", "Erase", "Image", new { imageId = Model.Id }, new { @class = "btn btn-default" });
        }
        <div id="vote-button">
            @if (this.Request.IsAuthenticated &&
                this.Model.User != this.User.Identity.Name &&
                !Model.VotedUsers.Contains(this.User.Identity.GetUserId()))
            {
                if (Model.VotingStrategy == "Closed" && Model.UsersInContest.Contains(this.User.Identity.GetUserId()))
                {
                    using (Ajax.BeginForm("Vote", "Image", new { imageId = Model.Id }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "image-rating",
                        InsertionMode = InsertionMode.Replace,
                        OnSuccess = "onVoteSuccess"
                    }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" class="btn btn-default" id="vote" name="vote" value="Vote" />
                    }
                }
                else if (Model.VotingStrategy == "Open")
                {
                    using (Ajax.BeginForm("Vote", "Image", new { imageId = Model.Id }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "image-rating",
                        InsertionMode = InsertionMode.Replace,
                        OnSuccess = "onVoteSuccess"
                    }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" class="btn btn-default" id="vote" name="vote" value="Vote" />
                    }
                }
            }
        </div>
    </div>
</div>


@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        function onVoteSuccess() {
            var button = document.getElementById("vote-button");
            button.parentNode.removeChild(button);
        }
    </script>
}